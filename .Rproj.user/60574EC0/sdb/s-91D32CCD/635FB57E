{
    "collab_server" : "",
    "contents" : "####LOAD DEPENDENCIES####\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(MSstats)\nlibrary(pheatmap)\nsource(\"./process4MSStats_3.R\")\nsource(\"./auxiliaryFunctions.R\")\n\n####LOAD AND PREPARE FILES####\n#Annotation is a list with of conditions and replicates\nannotation<-read.table(\"./SetA+B+C+D_Fusion/annotation.txt\", sep=\"\\t\", \n                  header=T, stringsAsFactors = F) #file is made from the make_annotation custom function.\n\n#Uniprot database. for uniprotID<>geneName\nuniprot<-read.delim(\"./referenceFiles/uniprot_singleID.txt\",\n                    header = TRUE, stringsAsFactors = F)[-1]\n\n#An in-house list of genes associated to DCM. Compiled by Luke Judge\ndcmSetAll<-read.delim(\"./referenceFiles/CardiomyopathyGenes_ExpandedPanel.txt\")\ndcmSet<-dcmSetAll[c(\"Combined\", \"UniprotID\")] #This is the set that was used for the venn diagram\n\n#Custom script for parsing maxquant files\nl <- parse_maxquant(evidenceFile = \"./SetA+B+C+D_Fusion/txt/evidence.txt\", \n               proteinGroupsFile = \"./SetA+B+C+D_Fusion/txt/proteinGroups.txt\", \n               annotationFile = \"./SetA+B+C+D_Fusion/annotation.txt\")\n#Data frame of intensities for PEPTIDES per EXPERIMENT. 'wide' format\npeptideWide <- l[[2]]\npeptideLong <- melt(data = peptideWide, value.var=\"Intensity\")\npeptideLong <- merge(x = peptideLong, y = annotation, by.x=\"variable\", by.y=\"BioReplicaSaint\", all.x = T)\npeptideLong <- peptideLong[,-which(names(peptideLong) %in% c(\"Raw.file\", \"IsotopeLabelType\", \"SAINT\"))]\npeptideLong <- data.frame(run = peptideLong$variable, protein = peptideLong$Proteins, \n                          peptideSequenceCharge=peptideLong$feature, condition=peptideLong$Condition,\n                          replicate = peptideLong$BioReplicate, runOrder = peptideLong$Run,\n                          intensity=peptideLong$value)\npeptideLong <- peptideLong[order(peptideLong$intensity, decreasing=T),]\npeptideLong <- peptideLong[order(peptideLong$runOrder, decreasing=F),]\n\n#Intensities for PROTEINS per EXPERIMENT. 'wide' format\nproteinWide <- l[[1]]\nproteinLong <- melt(data = proteinWide, value.var=\"Intensity\")\nproteinLong <- merge(x = proteinLong, y = annotation, by.x=\"variable\", by.y=\"BioReplicaSaint\", all.x = T)\nproteinLong <- proteinLong[,-which(names(proteinLong) %in% c(\"Raw.file\", \"IsotopeLabelType\", \"SAINT\"))]\nproteinLong <- data.frame(run = proteinLong$variable, protein = proteinLong$Proteins, \n                          condition=proteinLong$Condition,\n                          replicate = proteinLong$BioReplicate, runOrder = proteinLong$Run,\n                          intensity=proteinLong$value)\nproteinLong <- proteinLong[order(proteinLong$intensity, decreasing=T),]\nproteinLong <- proteinLong[order(proteinLong$runOrder, decreasing=F),]\n\n#List of removed contaminants \ncontaminants <- l[[3]]\n\n#Remove all samples we are not interested in\nproteinLong <- proteinLong[proteinLong$condition %in% c(\"WTc11\", \"A4\", \"K22\"),]\nproteinLong$condition <- droplevels(proteinLong$condition)\npeptideLong <- peptideLong[peptideLong$condition %in% c(\"WTc11\", \"A4\", \"K22\"),]\npeptideLong$condition <- droplevels(peptideLong$condition)\n\n###QC plots\n#Intensity of the iRT peptides per run\n#most common charge is 2. use only that one for normalization and plotting\nirtPeptides <- peptideLong[peptideLong$protein==\"Biognosys|iRT-Kit_WR_fusion\" & grepl(\"__2\", peptideLong$peptideSequenceCharge),]\nirtPeptides <- irtPeptides[!grepl(\"(ac)\", irtPeptides$peptideSequenceCharge),]#remove acetylated peptides\np <- ggplot(data = irtPeptides, \n            mapping = aes(x=run, y=log2(intensity), color=peptideSequenceCharge, group = peptideSequenceCharge))\np+geom_point()+ ylim(c(0, 32)) + theme(axis.text.x = element_text(angle = 60, hjust = 1))\nggsave(filename = \"./plots/iRT_peptide_intensities.pdf\", device = \"pdf\")\n\n#Intensity of the BAG3 peptides\nbag3Peptides <- peptideLong[peptideLong$protein==\"O95817\",]\np <- ggplot(data = bag3Peptides, \n            mapping = aes(x=as.character(sprintf(\"%02i\",runOrder)), y=log2(intensity), color=peptideSequenceCharge, group = peptideSequenceCharge))\np+geom_point() + geom_line() +  ylim(c(0, 32)) + theme(legend.position=\"none\") + theme(axis.text.x = element_text(angle = 60, hjust = 1))\nggsave(filename = \"./plots/bag3Peptide_intensitites.pdf\", device = \"pdf\")\n\n",
    "created" : 1502784950432.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1550388654",
    "id" : "635FB57E",
    "lastKnownWriteTime" : 1512721057,
    "last_content_update" : 1512721057991,
    "path" : "~/Documents/Projects/finalAPMS_analysis/finalAPMS_dataAnalysis.R",
    "project_path" : "finalAPMS_dataAnalysis.R",
    "properties" : {
        "docOutlineVisible" : "0",
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}